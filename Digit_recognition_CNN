{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"nvidiaTeslaT4","dataSources":[{"sourceId":3004,"databundleVersionId":861823,"sourceType":"competition"}],"dockerImageVersionId":30787,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":true}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# This Python 3 environment comes with many helpful analytics libraries installed\n# It is defined by the kaggle/python Docker image: https://github.com/kaggle/docker-python\n# For example, here's several helpful packages to load\n\nimport numpy as np # linear algebra\nimport pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)\n\n# Input data files are available in the read-only \"../input/\" directory\n# For example, running this (by clicking run or pressing Shift+Enter) will list all files under the input directory\n\nimport os\nfor dirname, _, filenames in os.walk('/kaggle/input'):\n    for filename in filenames:\n        print(os.path.join(dirname, filename))\n\n# You can write up to 20GB to the current directory (/kaggle/working/) that gets preserved as output when you create a version using \"Save & Run All\" \n# You can also write temporary files to /kaggle/temp/, but they won't be saved outside of the current session","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:30:49.403943Z","iopub.execute_input":"2024-12-12T14:30:49.404402Z","iopub.status.idle":"2024-12-12T14:30:50.488365Z","shell.execute_reply.started":"2024-12-12T14:30:49.404348Z","shell.execute_reply":"2024-12-12T14:30:50.487331Z"}},"outputs":[{"name":"stdout","text":"/kaggle/input/digit-recognizer/sample_submission.csv\n/kaggle/input/digit-recognizer/train.csv\n/kaggle/input/digit-recognizer/test.csv\n","output_type":"stream"}],"execution_count":1},{"cell_type":"markdown","source":"## Import dependancies","metadata":{}},{"cell_type":"code","source":"import pandas as pd\nimport numpy as np\nimport matplotlib.pyplot as plt\nimport seaborn as sns","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:30:50.490147Z","iopub.execute_input":"2024-12-12T14:30:50.490624Z","iopub.status.idle":"2024-12-12T14:30:51.909700Z","shell.execute_reply.started":"2024-12-12T14:30:50.490585Z","shell.execute_reply":"2024-12-12T14:30:51.908779Z"}},"outputs":[],"execution_count":2},{"cell_type":"code","source":"from sklearn.model_selection import train_test_split\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout, BatchNormalization\nfrom tensorflow.keras.preprocessing.image import ImageDataGenerator\nfrom tensorflow.keras.callbacks import ReduceLROnPlateau, EarlyStopping\nimport tensorflow as tf","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:30:51.910768Z","iopub.execute_input":"2024-12-12T14:30:51.911129Z","iopub.status.idle":"2024-12-12T14:31:03.170152Z","shell.execute_reply.started":"2024-12-12T14:30:51.911102Z","shell.execute_reply":"2024-12-12T14:31:03.169349Z"}},"outputs":[],"execution_count":3},{"cell_type":"code","source":"import warnings\nwarnings.filterwarnings('ignore')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:31:03.172058Z","iopub.execute_input":"2024-12-12T14:31:03.172566Z","iopub.status.idle":"2024-12-12T14:31:03.176837Z","shell.execute_reply.started":"2024-12-12T14:31:03.172539Z","shell.execute_reply":"2024-12-12T14:31:03.175804Z"}},"outputs":[],"execution_count":4},{"cell_type":"markdown","source":"## Import dataset","metadata":{}},{"cell_type":"code","source":"train= pd.read_csv('/kaggle/input/digit-recognizer/train.csv')\ntest= pd.read_csv('/kaggle/input/digit-recognizer/test.csv')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:31:03.178020Z","iopub.execute_input":"2024-12-12T14:31:03.178338Z","iopub.status.idle":"2024-12-12T14:31:07.583492Z","shell.execute_reply.started":"2024-12-12T14:31:03.178301Z","shell.execute_reply":"2024-12-12T14:31:07.582767Z"}},"outputs":[],"execution_count":5},{"cell_type":"code","source":"train.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:31:07.584297Z","iopub.execute_input":"2024-12-12T14:31:07.584574Z","iopub.status.idle":"2024-12-12T14:31:07.607799Z","shell.execute_reply.started":"2024-12-12T14:31:07.584540Z","shell.execute_reply":"2024-12-12T14:31:07.606992Z"}},"outputs":[{"execution_count":6,"output_type":"execute_result","data":{"text/plain":"   label  pixel0  pixel1  pixel2  pixel3  pixel4  pixel5  pixel6  pixel7  \\\n0      1       0       0       0       0       0       0       0       0   \n1      0       0       0       0       0       0       0       0       0   \n2      1       0       0       0       0       0       0       0       0   \n3      4       0       0       0       0       0       0       0       0   \n4      0       0       0       0       0       0       0       0       0   \n\n   pixel8  ...  pixel774  pixel775  pixel776  pixel777  pixel778  pixel779  \\\n0       0  ...         0         0         0         0         0         0   \n1       0  ...         0         0         0         0         0         0   \n2       0  ...         0         0         0         0         0         0   \n3       0  ...         0         0         0         0         0         0   \n4       0  ...         0         0         0         0         0         0   \n\n   pixel780  pixel781  pixel782  pixel783  \n0         0         0         0         0  \n1         0         0         0         0  \n2         0         0         0         0  \n3         0         0         0         0  \n4         0         0         0         0  \n\n[5 rows x 785 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>label</th>\n      <th>pixel0</th>\n      <th>pixel1</th>\n      <th>pixel2</th>\n      <th>pixel3</th>\n      <th>pixel4</th>\n      <th>pixel5</th>\n      <th>pixel6</th>\n      <th>pixel7</th>\n      <th>pixel8</th>\n      <th>...</th>\n      <th>pixel774</th>\n      <th>pixel775</th>\n      <th>pixel776</th>\n      <th>pixel777</th>\n      <th>pixel778</th>\n      <th>pixel779</th>\n      <th>pixel780</th>\n      <th>pixel781</th>\n      <th>pixel782</th>\n      <th>pixel783</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>4</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 785 columns</p>\n</div>"},"metadata":{}}],"execution_count":6},{"cell_type":"code","source":"train.tail()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:31:07.608738Z","iopub.execute_input":"2024-12-12T14:31:07.608968Z","iopub.status.idle":"2024-12-12T14:31:07.684463Z","shell.execute_reply.started":"2024-12-12T14:31:07.608945Z","shell.execute_reply":"2024-12-12T14:31:07.683722Z"}},"outputs":[{"execution_count":7,"output_type":"execute_result","data":{"text/plain":"       label  pixel0  pixel1  pixel2  pixel3  pixel4  pixel5  pixel6  pixel7  \\\n41995      0       0       0       0       0       0       0       0       0   \n41996      1       0       0       0       0       0       0       0       0   \n41997      7       0       0       0       0       0       0       0       0   \n41998      6       0       0       0       0       0       0       0       0   \n41999      9       0       0       0       0       0       0       0       0   \n\n       pixel8  ...  pixel774  pixel775  pixel776  pixel777  pixel778  \\\n41995       0  ...         0         0         0         0         0   \n41996       0  ...         0         0         0         0         0   \n41997       0  ...         0         0         0         0         0   \n41998       0  ...         0         0         0         0         0   \n41999       0  ...         0         0         0         0         0   \n\n       pixel779  pixel780  pixel781  pixel782  pixel783  \n41995         0         0         0         0         0  \n41996         0         0         0         0         0  \n41997         0         0         0         0         0  \n41998         0         0         0         0         0  \n41999         0         0         0         0         0  \n\n[5 rows x 785 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>label</th>\n      <th>pixel0</th>\n      <th>pixel1</th>\n      <th>pixel2</th>\n      <th>pixel3</th>\n      <th>pixel4</th>\n      <th>pixel5</th>\n      <th>pixel6</th>\n      <th>pixel7</th>\n      <th>pixel8</th>\n      <th>...</th>\n      <th>pixel774</th>\n      <th>pixel775</th>\n      <th>pixel776</th>\n      <th>pixel777</th>\n      <th>pixel778</th>\n      <th>pixel779</th>\n      <th>pixel780</th>\n      <th>pixel781</th>\n      <th>pixel782</th>\n      <th>pixel783</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>41995</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>41996</th>\n      <td>1</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>41997</th>\n      <td>7</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>41998</th>\n      <td>6</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>41999</th>\n      <td>9</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 785 columns</p>\n</div>"},"metadata":{}}],"execution_count":7},{"cell_type":"code","source":"test.head()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:31:07.685479Z","iopub.execute_input":"2024-12-12T14:31:07.685721Z","iopub.status.idle":"2024-12-12T14:31:07.702938Z","shell.execute_reply.started":"2024-12-12T14:31:07.685698Z","shell.execute_reply":"2024-12-12T14:31:07.702195Z"}},"outputs":[{"execution_count":8,"output_type":"execute_result","data":{"text/plain":"   pixel0  pixel1  pixel2  pixel3  pixel4  pixel5  pixel6  pixel7  pixel8  \\\n0       0       0       0       0       0       0       0       0       0   \n1       0       0       0       0       0       0       0       0       0   \n2       0       0       0       0       0       0       0       0       0   \n3       0       0       0       0       0       0       0       0       0   \n4       0       0       0       0       0       0       0       0       0   \n\n   pixel9  ...  pixel774  pixel775  pixel776  pixel777  pixel778  pixel779  \\\n0       0  ...         0         0         0         0         0         0   \n1       0  ...         0         0         0         0         0         0   \n2       0  ...         0         0         0         0         0         0   \n3       0  ...         0         0         0         0         0         0   \n4       0  ...         0         0         0         0         0         0   \n\n   pixel780  pixel781  pixel782  pixel783  \n0         0         0         0         0  \n1         0         0         0         0  \n2         0         0         0         0  \n3         0         0         0         0  \n4         0         0         0         0  \n\n[5 rows x 784 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pixel0</th>\n      <th>pixel1</th>\n      <th>pixel2</th>\n      <th>pixel3</th>\n      <th>pixel4</th>\n      <th>pixel5</th>\n      <th>pixel6</th>\n      <th>pixel7</th>\n      <th>pixel8</th>\n      <th>pixel9</th>\n      <th>...</th>\n      <th>pixel774</th>\n      <th>pixel775</th>\n      <th>pixel776</th>\n      <th>pixel777</th>\n      <th>pixel778</th>\n      <th>pixel779</th>\n      <th>pixel780</th>\n      <th>pixel781</th>\n      <th>pixel782</th>\n      <th>pixel783</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 784 columns</p>\n</div>"},"metadata":{}}],"execution_count":8},{"cell_type":"code","source":"test.tail()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:31:07.703858Z","iopub.execute_input":"2024-12-12T14:31:07.704080Z","iopub.status.idle":"2024-12-12T14:31:07.723166Z","shell.execute_reply.started":"2024-12-12T14:31:07.704057Z","shell.execute_reply":"2024-12-12T14:31:07.722193Z"}},"outputs":[{"execution_count":9,"output_type":"execute_result","data":{"text/plain":"       pixel0  pixel1  pixel2  pixel3  pixel4  pixel5  pixel6  pixel7  pixel8  \\\n27995       0       0       0       0       0       0       0       0       0   \n27996       0       0       0       0       0       0       0       0       0   \n27997       0       0       0       0       0       0       0       0       0   \n27998       0       0       0       0       0       0       0       0       0   \n27999       0       0       0       0       0       0       0       0       0   \n\n       pixel9  ...  pixel774  pixel775  pixel776  pixel777  pixel778  \\\n27995       0  ...         0         0         0         0         0   \n27996       0  ...         0         0         0         0         0   \n27997       0  ...         0         0         0         0         0   \n27998       0  ...         0         0         0         0         0   \n27999       0  ...         0         0         0         0         0   \n\n       pixel779  pixel780  pixel781  pixel782  pixel783  \n27995         0         0         0         0         0  \n27996         0         0         0         0         0  \n27997         0         0         0         0         0  \n27998         0         0         0         0         0  \n27999         0         0         0         0         0  \n\n[5 rows x 784 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pixel0</th>\n      <th>pixel1</th>\n      <th>pixel2</th>\n      <th>pixel3</th>\n      <th>pixel4</th>\n      <th>pixel5</th>\n      <th>pixel6</th>\n      <th>pixel7</th>\n      <th>pixel8</th>\n      <th>pixel9</th>\n      <th>...</th>\n      <th>pixel774</th>\n      <th>pixel775</th>\n      <th>pixel776</th>\n      <th>pixel777</th>\n      <th>pixel778</th>\n      <th>pixel779</th>\n      <th>pixel780</th>\n      <th>pixel781</th>\n      <th>pixel782</th>\n      <th>pixel783</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>27995</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>27996</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>27997</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>27998</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n    <tr>\n      <th>27999</th>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>...</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n      <td>0</td>\n    </tr>\n  </tbody>\n</table>\n<p>5 rows × 784 columns</p>\n</div>"},"metadata":{}}],"execution_count":9},{"cell_type":"code","source":"train.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:31:07.726976Z","iopub.execute_input":"2024-12-12T14:31:07.727315Z","iopub.status.idle":"2024-12-12T14:31:07.771232Z","shell.execute_reply.started":"2024-12-12T14:31:07.727265Z","shell.execute_reply":"2024-12-12T14:31:07.770553Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 42000 entries, 0 to 41999\nColumns: 785 entries, label to pixel783\ndtypes: int64(785)\nmemory usage: 251.5 MB\n","output_type":"stream"}],"execution_count":10},{"cell_type":"code","source":"test.info()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:31:07.772105Z","iopub.execute_input":"2024-12-12T14:31:07.772348Z","iopub.status.idle":"2024-12-12T14:31:07.798588Z","shell.execute_reply.started":"2024-12-12T14:31:07.772324Z","shell.execute_reply":"2024-12-12T14:31:07.797785Z"}},"outputs":[{"name":"stdout","text":"<class 'pandas.core.frame.DataFrame'>\nRangeIndex: 28000 entries, 0 to 27999\nColumns: 784 entries, pixel0 to pixel783\ndtypes: int64(784)\nmemory usage: 167.5 MB\n","output_type":"stream"}],"execution_count":11},{"cell_type":"code","source":"train.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:31:07.799924Z","iopub.execute_input":"2024-12-12T14:31:07.800763Z","iopub.status.idle":"2024-12-12T14:31:09.604602Z","shell.execute_reply.started":"2024-12-12T14:31:07.800729Z","shell.execute_reply":"2024-12-12T14:31:09.603559Z"}},"outputs":[{"execution_count":12,"output_type":"execute_result","data":{"text/plain":"              label   pixel0   pixel1   pixel2   pixel3   pixel4   pixel5  \\\ncount  42000.000000  42000.0  42000.0  42000.0  42000.0  42000.0  42000.0   \nmean       4.456643      0.0      0.0      0.0      0.0      0.0      0.0   \nstd        2.887730      0.0      0.0      0.0      0.0      0.0      0.0   \nmin        0.000000      0.0      0.0      0.0      0.0      0.0      0.0   \n25%        2.000000      0.0      0.0      0.0      0.0      0.0      0.0   \n50%        4.000000      0.0      0.0      0.0      0.0      0.0      0.0   \n75%        7.000000      0.0      0.0      0.0      0.0      0.0      0.0   \nmax        9.000000      0.0      0.0      0.0      0.0      0.0      0.0   \n\n        pixel6   pixel7   pixel8  ...      pixel774      pixel775  \\\ncount  42000.0  42000.0  42000.0  ...  42000.000000  42000.000000   \nmean       0.0      0.0      0.0  ...      0.219286      0.117095   \nstd        0.0      0.0      0.0  ...      6.312890      4.633819   \nmin        0.0      0.0      0.0  ...      0.000000      0.000000   \n25%        0.0      0.0      0.0  ...      0.000000      0.000000   \n50%        0.0      0.0      0.0  ...      0.000000      0.000000   \n75%        0.0      0.0      0.0  ...      0.000000      0.000000   \nmax        0.0      0.0      0.0  ...    254.000000    254.000000   \n\n           pixel776     pixel777      pixel778      pixel779  pixel780  \\\ncount  42000.000000  42000.00000  42000.000000  42000.000000   42000.0   \nmean       0.059024      0.02019      0.017238      0.002857       0.0   \nstd        3.274488      1.75987      1.894498      0.414264       0.0   \nmin        0.000000      0.00000      0.000000      0.000000       0.0   \n25%        0.000000      0.00000      0.000000      0.000000       0.0   \n50%        0.000000      0.00000      0.000000      0.000000       0.0   \n75%        0.000000      0.00000      0.000000      0.000000       0.0   \nmax      253.000000    253.00000    254.000000     62.000000       0.0   \n\n       pixel781  pixel782  pixel783  \ncount   42000.0   42000.0   42000.0  \nmean        0.0       0.0       0.0  \nstd         0.0       0.0       0.0  \nmin         0.0       0.0       0.0  \n25%         0.0       0.0       0.0  \n50%         0.0       0.0       0.0  \n75%         0.0       0.0       0.0  \nmax         0.0       0.0       0.0  \n\n[8 rows x 785 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>label</th>\n      <th>pixel0</th>\n      <th>pixel1</th>\n      <th>pixel2</th>\n      <th>pixel3</th>\n      <th>pixel4</th>\n      <th>pixel5</th>\n      <th>pixel6</th>\n      <th>pixel7</th>\n      <th>pixel8</th>\n      <th>...</th>\n      <th>pixel774</th>\n      <th>pixel775</th>\n      <th>pixel776</th>\n      <th>pixel777</th>\n      <th>pixel778</th>\n      <th>pixel779</th>\n      <th>pixel780</th>\n      <th>pixel781</th>\n      <th>pixel782</th>\n      <th>pixel783</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>42000.000000</td>\n      <td>42000.0</td>\n      <td>42000.0</td>\n      <td>42000.0</td>\n      <td>42000.0</td>\n      <td>42000.0</td>\n      <td>42000.0</td>\n      <td>42000.0</td>\n      <td>42000.0</td>\n      <td>42000.0</td>\n      <td>...</td>\n      <td>42000.000000</td>\n      <td>42000.000000</td>\n      <td>42000.000000</td>\n      <td>42000.00000</td>\n      <td>42000.000000</td>\n      <td>42000.000000</td>\n      <td>42000.0</td>\n      <td>42000.0</td>\n      <td>42000.0</td>\n      <td>42000.0</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>4.456643</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.219286</td>\n      <td>0.117095</td>\n      <td>0.059024</td>\n      <td>0.02019</td>\n      <td>0.017238</td>\n      <td>0.002857</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>2.887730</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>6.312890</td>\n      <td>4.633819</td>\n      <td>3.274488</td>\n      <td>1.75987</td>\n      <td>1.894498</td>\n      <td>0.414264</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>2.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>4.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>7.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.00000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>9.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>254.000000</td>\n      <td>254.000000</td>\n      <td>253.000000</td>\n      <td>253.00000</td>\n      <td>254.000000</td>\n      <td>62.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>8 rows × 785 columns</p>\n</div>"},"metadata":{}}],"execution_count":12},{"cell_type":"code","source":"test.describe()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:31:09.605471Z","iopub.execute_input":"2024-12-12T14:31:09.605703Z","iopub.status.idle":"2024-12-12T14:31:10.982846Z","shell.execute_reply.started":"2024-12-12T14:31:09.605680Z","shell.execute_reply":"2024-12-12T14:31:10.981925Z"}},"outputs":[{"execution_count":13,"output_type":"execute_result","data":{"text/plain":"        pixel0   pixel1   pixel2   pixel3   pixel4   pixel5   pixel6   pixel7  \\\ncount  28000.0  28000.0  28000.0  28000.0  28000.0  28000.0  28000.0  28000.0   \nmean       0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0   \nstd        0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0   \nmin        0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0   \n25%        0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0   \n50%        0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0   \n75%        0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0   \nmax        0.0      0.0      0.0      0.0      0.0      0.0      0.0      0.0   \n\n        pixel8   pixel9  ...      pixel774      pixel775      pixel776  \\\ncount  28000.0  28000.0  ...  28000.000000  28000.000000  28000.000000   \nmean       0.0      0.0  ...      0.164607      0.073214      0.028036   \nstd        0.0      0.0  ...      5.473293      3.616811      1.813602   \nmin        0.0      0.0  ...      0.000000      0.000000      0.000000   \n25%        0.0      0.0  ...      0.000000      0.000000      0.000000   \n50%        0.0      0.0  ...      0.000000      0.000000      0.000000   \n75%        0.0      0.0  ...      0.000000      0.000000      0.000000   \nmax        0.0      0.0  ...    253.000000    254.000000    193.000000   \n\n           pixel777      pixel778  pixel779  pixel780  pixel781  pixel782  \\\ncount  28000.000000  28000.000000   28000.0   28000.0   28000.0   28000.0   \nmean       0.011250      0.006536       0.0       0.0       0.0       0.0   \nstd        1.205211      0.807475       0.0       0.0       0.0       0.0   \nmin        0.000000      0.000000       0.0       0.0       0.0       0.0   \n25%        0.000000      0.000000       0.0       0.0       0.0       0.0   \n50%        0.000000      0.000000       0.0       0.0       0.0       0.0   \n75%        0.000000      0.000000       0.0       0.0       0.0       0.0   \nmax      187.000000    119.000000       0.0       0.0       0.0       0.0   \n\n       pixel783  \ncount   28000.0  \nmean        0.0  \nstd         0.0  \nmin         0.0  \n25%         0.0  \n50%         0.0  \n75%         0.0  \nmax         0.0  \n\n[8 rows x 784 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>pixel0</th>\n      <th>pixel1</th>\n      <th>pixel2</th>\n      <th>pixel3</th>\n      <th>pixel4</th>\n      <th>pixel5</th>\n      <th>pixel6</th>\n      <th>pixel7</th>\n      <th>pixel8</th>\n      <th>pixel9</th>\n      <th>...</th>\n      <th>pixel774</th>\n      <th>pixel775</th>\n      <th>pixel776</th>\n      <th>pixel777</th>\n      <th>pixel778</th>\n      <th>pixel779</th>\n      <th>pixel780</th>\n      <th>pixel781</th>\n      <th>pixel782</th>\n      <th>pixel783</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>count</th>\n      <td>28000.0</td>\n      <td>28000.0</td>\n      <td>28000.0</td>\n      <td>28000.0</td>\n      <td>28000.0</td>\n      <td>28000.0</td>\n      <td>28000.0</td>\n      <td>28000.0</td>\n      <td>28000.0</td>\n      <td>28000.0</td>\n      <td>...</td>\n      <td>28000.000000</td>\n      <td>28000.000000</td>\n      <td>28000.000000</td>\n      <td>28000.000000</td>\n      <td>28000.000000</td>\n      <td>28000.0</td>\n      <td>28000.0</td>\n      <td>28000.0</td>\n      <td>28000.0</td>\n      <td>28000.0</td>\n    </tr>\n    <tr>\n      <th>mean</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.164607</td>\n      <td>0.073214</td>\n      <td>0.028036</td>\n      <td>0.011250</td>\n      <td>0.006536</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>std</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>5.473293</td>\n      <td>3.616811</td>\n      <td>1.813602</td>\n      <td>1.205211</td>\n      <td>0.807475</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>min</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>25%</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>50%</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>75%</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>max</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>253.000000</td>\n      <td>254.000000</td>\n      <td>193.000000</td>\n      <td>187.000000</td>\n      <td>119.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>8 rows × 784 columns</p>\n</div>"},"metadata":{}}],"execution_count":13},{"cell_type":"code","source":"train.describe().T","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:31:10.983789Z","iopub.execute_input":"2024-12-12T14:31:10.984026Z","iopub.status.idle":"2024-12-12T14:31:12.565891Z","shell.execute_reply.started":"2024-12-12T14:31:10.983989Z","shell.execute_reply":"2024-12-12T14:31:12.565041Z"}},"outputs":[{"execution_count":14,"output_type":"execute_result","data":{"text/plain":"            count      mean       std  min  25%  50%  75%   max\nlabel     42000.0  4.456643  2.887730  0.0  2.0  4.0  7.0   9.0\npixel0    42000.0  0.000000  0.000000  0.0  0.0  0.0  0.0   0.0\npixel1    42000.0  0.000000  0.000000  0.0  0.0  0.0  0.0   0.0\npixel2    42000.0  0.000000  0.000000  0.0  0.0  0.0  0.0   0.0\npixel3    42000.0  0.000000  0.000000  0.0  0.0  0.0  0.0   0.0\n...           ...       ...       ...  ...  ...  ...  ...   ...\npixel779  42000.0  0.002857  0.414264  0.0  0.0  0.0  0.0  62.0\npixel780  42000.0  0.000000  0.000000  0.0  0.0  0.0  0.0   0.0\npixel781  42000.0  0.000000  0.000000  0.0  0.0  0.0  0.0   0.0\npixel782  42000.0  0.000000  0.000000  0.0  0.0  0.0  0.0   0.0\npixel783  42000.0  0.000000  0.000000  0.0  0.0  0.0  0.0   0.0\n\n[785 rows x 8 columns]","text/html":"<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>count</th>\n      <th>mean</th>\n      <th>std</th>\n      <th>min</th>\n      <th>25%</th>\n      <th>50%</th>\n      <th>75%</th>\n      <th>max</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>label</th>\n      <td>42000.0</td>\n      <td>4.456643</td>\n      <td>2.887730</td>\n      <td>0.0</td>\n      <td>2.0</td>\n      <td>4.0</td>\n      <td>7.0</td>\n      <td>9.0</td>\n    </tr>\n    <tr>\n      <th>pixel0</th>\n      <td>42000.0</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>pixel1</th>\n      <td>42000.0</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>pixel2</th>\n      <td>42000.0</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>pixel3</th>\n      <td>42000.0</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>pixel779</th>\n      <td>42000.0</td>\n      <td>0.002857</td>\n      <td>0.414264</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>62.0</td>\n    </tr>\n    <tr>\n      <th>pixel780</th>\n      <td>42000.0</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>pixel781</th>\n      <td>42000.0</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>pixel782</th>\n      <td>42000.0</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n    <tr>\n      <th>pixel783</th>\n      <td>42000.0</td>\n      <td>0.000000</td>\n      <td>0.000000</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n    </tr>\n  </tbody>\n</table>\n<p>785 rows × 8 columns</p>\n</div>"},"metadata":{}}],"execution_count":14},{"cell_type":"code","source":"import seaborn as sns\nimport matplotlib.pyplot as plt\n\n# Set a custom style and color palette\nsns.set_theme(style=\"whitegrid\")\ncolors = sns.color_palette(\"viridis\", len(train['label'].unique()))\n\nplt.figure(figsize=(10, 6))\nax = sns.countplot(\n    x=train['label'],\n    palette=colors,\n    order=sorted(train['label'].unique())  # Ensure labels are in order\n)\n\nfor p in ax.patches:\n    ax.annotate(\n        f'{int(p.get_height())}', \n        (p.get_x() + p.get_width() / 2., p.get_height()), \n        ha='center', va='center', \n        xytext=(0, 5), textcoords='offset points', \n        fontsize=10, color='black'\n    )\n\nplt.title('Unique Distribution of Digits in the Dataset', fontsize=14, fontweight='bold')\nplt.xlabel('Digit Label', fontsize=12)\nplt.ylabel('Count', fontsize=12)\n\nplt.grid(axis='y', linestyle='--', alpha=0.7)\n\n# Show the plot\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:31:12.567280Z","iopub.execute_input":"2024-12-12T14:31:12.567629Z","iopub.status.idle":"2024-12-12T14:31:12.872180Z","shell.execute_reply.started":"2024-12-12T14:31:12.567592Z","shell.execute_reply":"2024-12-12T14:31:12.871231Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1000x600 with 1 Axes>","image/png":""},"metadata":{}}],"execution_count":15},{"cell_type":"code","source":"fig, axes = plt.subplots(1, 5, figsize=(15, 5), constrained_layout=True)\n\n# Iterate through the first 5 rows of the dataset\nfor i, ax in enumerate(axes):\n    ax.imshow(train.iloc[i, 1:].values.reshape(28, 28), cmap='gray')\n    ax.set_title(f\"Label: {train['label'][i]}\", fontsize=12, fontweight='bold', color='darkblue')\n    ax.axis('off')  # Hide axes for a cleaner look\n\n# Add an overall title for the figure\nfig.suptitle(\"Sample Digits from the Dataset\", fontsize=16, fontweight='bold', color='darkgreen')\n\n# Show the plot\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:31:12.873253Z","iopub.execute_input":"2024-12-12T14:31:12.873514Z","iopub.status.idle":"2024-12-12T14:31:13.648438Z","shell.execute_reply.started":"2024-12-12T14:31:12.873488Z","shell.execute_reply":"2024-12-12T14:31:13.647510Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1500x500 with 5 Axes>","image/png":"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4CrLlq1YZx1QOVS19QqouqraejV69Ky4996PonHj2nHPPd3LZExg81DV1it/D2JbGyIi4tFHP8stbF277hDPP39sDB16Slx55T65mqKi4u8dJ2/9bxx+L+8CAimq2nq1004Nc1/PmrUkCgu/O+tj2rTvLk7UuvVWZTYnkI2qtl4BVVdVW6+mTVsURUXFMWfOkthuu/tzF2acMOG77SN23fUf0bnzo2U2J5CNqrZe+XsQZ84TERGTJy/MfX3ttfvGUUftHBER//znqO997HvvTY3u3Vd+LOjdd6fmjv/gB40iIqJduya5Yzfe2HWdH+0pKFgedet6FxD4flVtvWrSpE7sumuTGDVqdhQWFsX770+Lrl1XXvhn+PDvejzwwB3LbE4gG1VtvQKqLusVUFlUtfXK34MI57cg//nP9Lj66iFrHb/qqi7RqtV379T99a8fRs2a1ePdd6fGww9/+r3jnnfewLj99gNjyZLCuO66t3PHV+3rd+KJ7eLqq4fE0qUr4o473ou8vLzo2nWHKChYHuPGzYvBgyfF4sWFMXDgSRuc56ab3ombbx4eERH/+MdhceaZHTdYX1CwPF5++euIiPjooxm54xMmzI+nn/4iIiL22We7aNXKu4+wudnS1qvzz+8cl176RkREnHPOa3HLLQfEhx/OiAEDxkdExI47NoijjvrB9z4/IHtb2nrl9yuovLak9apNm8bx5z8futbxW24ZHnPmrNzu4ppr9o0OHZp+7/MDsrclrVcR/h7c0gnntyAjR86MkSNnrnX8/PP3iP/3/3aL224bEQUFhTFw4IQYOHBCREQccEDzeOeddV/lepVq1fLiZz/rV+JYx45bx7nn7h4RKxeRe+/tHuedNzCWLl0RN900bK0xDj647N8BnDGjIE46qd9ax998c1K8+eakiFi1SPrjETY3W9p6dcEFnePFF8fGoEET47PPZsUJJ7yYu69WrerRu/dhUauW/7Jhc7SlrVd+v4LKa0tar3bcsUFcdtleax3/y1/+kwvnTz99t2jfXjgPm6Mtab2K8Pfgls6e80RERMuWDWPAgJOiS5ftok6d/Nh550Zx33094uyzO33vY9988+T42c92iYYNa0aDBjXjlFPax+uvnxS1a3+3cJx99u4xZMgpcfzxbWPbbetGfn612HbbutGly3Zx/fX7xX339SjPpwdUIVVxvcrPrxb9+x8ft93WLdq3bxK1alWPJk1qx9FH7xzDhv0i99FLoHKpiusVUDVZr4DKoiquV/4e3LLlFRcXf/9VEgAAAAAAgDLjzHkAAAAAAMiYcB4AAAAAADImnAcAAAAAgIwJ5wEAAAAAIGPCeQAAAAAAyJhwHgAAAAAAMpafWpiXl1eefQAkKy4u3uD91itgc2G9AioL6xVQWVivgMri+9arCGfOAwAAAABA5oTzAAAAAACQMeE8AAAAAABkTDgPAAAAAAAZE84DAAAAAEDGhPMAAAAAAJAx4TwAAAAAAGRMOA8AAAAAABkTzgMAAAAAQMaE8wAAAAAAkDHhPAAAAAAAZEw4DwAAAAAAGRPOAwAAAABAxoTzAAAAAACQMeE8AAAAAABkTDgPAAAAAAAZE84DAAAAAEDGhPMAAAAAAJAx4TwAAAAAAGRMOA8AAAAAABkTzgMAAAAAQMaE8wAAAAAAkDHhPAAAAAAAZEw4DwAAAAAAGRPOAwAAAABAxoTzAAAAAACQMeE8AAAAAABkTDgPAAAAAAAZE84DAAAAAEDGhPMAAAAAAJAx4TwAAAAAAGRMOA8AAAAAABkTzgMAAAAAQMaE8wAAAAAAkDHhPAAAAAAAZEw4DwAAAAAAGRPOAwAAAABAxoTzAAAAAACQMeE8AAAAAABkTDgPAAAAAAAZE84DAAAAAEDG8iu6AdhSvP7660l13bt3T6o744wzkud+7LHHkmuhvDVp0iS5tn79+kl1F154YWnbWa999903qe6+++5LHnP+/PlJda+99lrymMXFxcm1QMWrXr16cu0f/vCHpLqioqKkuquvvjp57hUrViTXAgDk5eUl1W233XbJY15wwQVJddtvv33ymL/61a+Sa8vaP/7xj6S6m266KXnMb775Jqku9fdFsufMeQAAAAAAyJhwHgAAAAAAMiacBwAAAACAjAnnAQAAAAAgY8J5AAAAAADImHAeAAAAAAAyJpwHAAAAAICMCecBAAAAACBjwnkAAAAAAMhYXnFxcXFSYV5eefcClc7gwYOTaw844ICkuurVqyfVnXnmmclz9+nTJ7m2Mvi+Zct6VXYaNGiQXHv44Ycn1f3zn/9MHjM/Pz+5tqJ8+eWXybUtWrRIqnv00UeTx7zzzjuT6saPH588JmXHesWa6tSpk1y7aNGiMp27bt26ybVLliwp07nZ/Fmv1m/s2LFJdaNGjUqqO+GEE5LnXrZsWXItG7Yx62+PHj2S6vr161fadtgE1qvs1K5dO7n2jDPOSKq7//77S9sO63DFFVck1d19993JYxYVFZW2HdaQErs7cx4AAAAAADImnAcAAAAAgIwJ5wEAAAAAIGPCeQAAAAAAyJhwHgAAAAAAMiacBwAAAACAjAnnAQAAAAAgY8J5AAAAAADImHAeAAAAAAAyJpwHAAAAAICM5RUXFxcnFebllXcvsNm47rrrkuquv/765DFr1KiRVPfvf/87qe5Xv/pV8twFBQXJtZXB9y1b1qvv16hRo6S6Pn36JI955JFHlrIbNsX06dOT6o455pjkMb/44oukunnz5iWPuaWyXrGmOnXqJNcuWrSoTOeuW7ducu2SJUvKdG42f9ar9dtxxx2T6r788sukuh122CF57jlz5iTXsmHNmzdPrn3uueeS6rp06VLadtgE1qtNV69evaS6YcOGJY/ZqVOn0rZDBi6++OLk2l69epVjJ1uWlNjdmfMAAAAAAJAx4TwAAAAAAGRMOA8AAAAAABkTzgMAAAAAQMaE8wAAAAAAkDHhPAAAAAAAZEw4DwAAAAAAGRPOAwAAAABAxoTzAAAAAACQsbzi4uLipMK8vPLuBcrVsccem1z7xBNPJNXVrFkzecxPP/00qe7AAw9MqluwYEHy3FXN9y1b1qvvd9hhhyXVvfzyy+XcCZujCy64IKnugQceKOdOKj/rFWuqU6dOcu2iRYvKdO4LL7wwufb+++8v07nZ/FmvNt38+fOT6p566qnkMc8555zStsMamjdvnlw7adKkpLpDDz00ecy33noruZYNs15tulatWiXVjRs3rpw7IStjxoxJrr3rrruS6h555JGkuhUrViTPXdWkxO7OnAcAAAAAgIwJ5wEAAAAAIGPCeQAAAAAAyJhwHgAAAAAAMiacBwAAAACAjAnnAQAAAAAgY8J5AAAAAADImHAeAAAAAAAyJpwHAAAAAICM5Vd0A7CpWrRokVR34403Jo9Zs2bNpLrZs2cnj3n99dcn1S1YsCB5TFhTt27dkuquuuqqcu5k83XppZcm1U2ZMiWp7n/+53+S5953332TayvSH//4x6S6WbNmJdX17dt3U9oBysgxxxyTXHv//feXYydQNT377LNJdXvvvXfymKl/lyxbtix5TMpOtWrOd2Tzsu222ybVvfTSS+XcSdlYvnx5Ut1TTz2VPOaBBx5Y2nbWabvttkuurVWrVpnOvTHatWuXXPu3v/0tqW7IkCFJdV988UXy3Fsi/5MAAAAAAEDGhPMAAAAAAJAx4TwAAAAAAGRMOA8AAAAAABkTzgMAAAAAQMaE8wAAAAAAkDHhPAAAAAAAZEw4DwAAAAAAGRPOAwAAAABAxoTzAAAAAACQsfyKbgDWpUuXLsm1Dz74YFJdx44dS9vOel188cXJtf369Svz+WFNl112WVLdwQcfXL6NbMAHH3yQXPvuu++W+fyDBw9Oqhs5cmRS3auvvpo8d5MmTZLq+vbtmzzmxqyXqerVq5dU97Of/SypbmOeDwBUVuPGjUuqO/3005PH3GqrrZLqvv322+Qxt1RLly5Nrp03b145dgLl5/LLL0+q69ChQzl3sn7Tpk1Lrj3vvPOS6ioyb/nxj3+cXNurV6+kup133rm07WTqhRdeSKq79dZbk8d8/PHHS9tOpeXMeQAAAAAAyJhwHgAAAAAAMiacBwAAAACAjAnnAQAAAAAgY8J5AAAAAADImHAeAAAAAAAyJpwHAAAAAICMCecBAAAAACBjwnkAAAAAAMhYfkU3wJbltNNOS6p79NFHk8csLi5Oqps3b17ymK+//npS3WuvvZY8JpRWXl5ecm21ahX3nuupp56aVDdjxozkMQcNGlTadjKzaNGiMq999dVXk8fce++9k+rK47XRvn37pLqjjjoqecyXXnqptO0AQIX68MMPK7oFNmDmzJnJtSNHjizHTmDj1KhRI7n26KOPLsdOysZXX32VXNuvX79y7KRsDBgwILn2rrvuSqq75pprksds0aJFcm1Za9euXVLd9ddfnzzmkCFDkuomTZqUPObmzpnzAAAAAACQMeE8AAAAAABkTDgPAAAAAAAZE84DAAAAAEDGhPMAAAAAAJAx4TwAAAAAAGRMOA8AAAAAABkTzgMAAAAAQMaE8wAAAAAAkDHhPAAAAAAAZCy/ohugath2222T6n7729+Wcyfr98ILLyTXnnXWWeXYCWyc3XffPbn22GOPLb9Gvsfbb7+dVDdp0qRy7qTyu+mmm5JrP/3006S6vn37lrKb9evQoUNS3U9/+tPkMV966aXStgOVwooVK5JrBw4cmFTXs2fP0rYDlKGlS5dWdAtkbGN+xxk8eHA5dkJVdumllybX7rLLLuXYyYYtW7Ysqe6OO+4o5042Xw888EBS3Ysvvpg85nPPPZdUt88++ySPWdbatWuXXPv6668n1aX+LRoRUVhYmFxbEZw5DwAAAAAAGRPOAwAAAABAxoTzAAAAAACQMeE8AAAAAABkTDgPAAAAAAAZE84DAAAAAEDGhPMAAAAAAJAx4TwAAAAAAGRMOA8AAAAAABnLr+gG2Hw1atQouXbAgAFJdR06dChlN+u3YMGCpLoXX3yxzOeGLLRu3brC5p4/f35y7fLly8uxE9Zn2LBhSXUb82/ZsGHD0rYDfI9ly5Yl1/bu3TuprmfPnqXsBihLqf/Xrlixopw7ISsnnXRScu3ll19ejp1Qlf3xj39Mri0uLi7HTjbs/fffT6rr379/OXdS+U2ZMiW59rjjjkuqe+6555LH3GeffZJry1rbtm2T6vLy8sq5k+w4cx4AAAAAADImnAcAAAAAgIwJ5wEAAAAAIGPCeQAAAAAAyJhwHgAAAAAAMiacBwAAAACAjAnnAQAAAAAgY8J5AAAAAADImHAeAAAAAAAyJpwHAAAAAICM5Vd0A2y+6tWrl1zbsWPHcuxkw1q0aJFUt2DBgnLuBMrH3LlzK2zu9957L7l2zpw55dgJ6zN16tSkupdffjl5zFNOOaW07azTT37yk+Ta+vXrJ9UtXLiwtO1AhcrPT//1u2vXruXYCVDWRowYkVQ3adKk5DH/93//N6nuoosuSh5z+fLlybVbqv79+yfVXX311cljNmjQIKnO361UVr17967oFrZIU6ZMSao79thjk8f86KOPkuqaNWuWPGZZa9WqVXLt2LFjy7GTTefMeQAAAAAAyJhwHgAAAAAAMiacBwAAAACAjAnnAQAAAAAgY8J5AAAAAADImHAeAAAAAAAyJpwHAAAAAICMCecBAAAAACBjwnkAAAAAAMhYfkU3QPa23nrrpLp+/folj5mXl1fadtZpxIgRybXLli0r07khKw0bNkyqe/LJJ8u5k/Xr0aNHcm2zZs2S6iZNmlTadtgEjz/+eHLtKaecUqZzt2zZMrm2Ro0aZTo3bG425jV+0UUXlWMnQEU555xzkmtfffXVpLo///nPyWOOHj06uXZLNWXKlKS6rbbaKnnM/fbbL6lu4MCByWMCpJo6dWpy7ZIlS8qxk7Jx+umnJ9fecMMN5djJpnPmPAAAAAAAZEw4DwAAAAAAGRPOAwAAAABAxoTzAAAAAACQMeE8AAAAAABkTDgPAAAAAAAZE84DAAAAAEDGhPMAAAAAAJAx4TwAAAAAAGQsv6IbIHv33ntvUt0ee+yRPGZxcXFS3bBhw5LqevTokTz30qVLk2thc5Kfn7YEN2vWrJw7YUswefLkim4BAIiIQYMGJdfOmTMnqe4vf/lL8piHHXZYcu2Wqn///kl1BQUF5dwJQPZ69+6dVHfDDTeUbyNbCGfOAwAAAABAxoTzAAAAAACQMeE8AAAAAABkTDgPAAAAAAAZE84DAAAAAEDGhPMAAAAAAJAx4TwAAAAAAGRMOA8AAAAAABkTzgMAAAAAQMaE8wAAAAAAkLH8im6AsrH11lsn1+68885lPv/y5cuT6u68886kuqVLl25KO1ApzJ07N6nu8ccfTx7z1FNPLWU3AABUVvPmzavoFqqU1N/TP/nkk+Qxf/Ob3yTVvfPOO0l1BQUFyXMDbIz69etXdAvfa9SoURXdQplx5jwAAAAAAGRMOA8AAAAAABkTzgMAAAAAQMaE8wAAAAAAkDHhPAAAAAAAZEw4DwAAAAAAGRPOAwAAAABAxoTzAAAAAACQMeE8AAAAAABkLL+iG2DDmjVrllT3r3/9K3nMPffcM6luyZIlyWOef/75SXUvvfRS8phQ1RUVFSXVDRw4MHnMU089tbTtbLK+ffsm1fXo0SN5zIULF5a2nS1Go0aNkuoeffTR8m1kAx544IHk2rlz55ZfIwBQyTz//PNJdXvttVfymPn5aTFAYWFh8pipdthhh6S63XffPXnM/fbbL6nuyCOPTB6zRo0aSXUb02eqa665Jqnu+uuvL/O5garr6KOPTq69+OKLy7GTsvH0009XdAtlxpnzAAAAAACQMeE8AAAAAABkTDgPAAAAAAAZE84DAAAAAEDGhPMAAAAAAJAx4TwAAAAAAGRMOA8AAAAAABkTzgMAAAAAQMaE8wAAAAAAkDHhPAAAAAAAZCy/ohtgw4477rikukMPPbTM537vvfeSa/v06VPm8wMrvfDCC8m1H3/8cVJd586dS9fMBnTp0iWp7o033kge86qrrkqqGzx4cPKYlcE222yTXPunP/0pqa5Tp06lbWe9Fi9enFR35513Jo9ZXFxc2nYAoMp57LHHkurOPvvs5DGvv/76pLq5c+cmj3n44Ycn1R1wwAFJdTVr1kyee8iQIUl1N910U/KYs2bNSqo79thjk8e88sork+qGDRuWPCZsTlJf4xvzt9vXX39d2na2GDvttFNS3ZFHHpk8Zo0aNUrZzaa7+OKLk+oKCwvLuZPsOHMeAAAAAAAyJpwHAAAAAICMCecBAAAAACBjwnkAAAAAAMiYcB4AAAAAADImnAcAAAAAgIwJ5wEAAAAAIGPCeQAAAAAAyJhwHgAAAAAAMpZf0Q1siX7+858n1955551lPv+wYcOS6n7xi1+U+dzAxps3b15y7SWXXJJUd//99yfVdejQIXnuVHvvvXdy7c0335xUN2fOnNK2s17z589PqqtZs2bymLVr106qe/TRR5PH7NSpU3JtWXv55ZeT6iZMmFDOnUDlcc8991R0C0Al8umnnybVjRkzJnnM888/v7TtrFfq7wRXXHFFUt0HH3yQPPfG1Ja12bNnJ9deeeWV5dgJVdnHH3+cXLvHHnuUXyPfo23btkl1F154YfKYqWtGZdGyZcukutS/6yMizjjjjKS6pk2bJo9Z1h5++OHk2tSsori4uLTtbHacOQ8AAAAAABkTzgMAAAAAQMaE8wAAAAAAkDHhPAAAAAAAZEw4DwAAAAAAGRPOAwAAAABAxoTzAAAAAACQMeE8AAAAAABkTDgPAAAAAAAZE84DAAAAAEDG8iu6gapkq622Sqq79dZbk8ds0KBBadtZr7vuuiupburUqWU+N1C+3n777aS61HXo4YcfTp67Xr16ybWpunXrllT34Ycflvnc3377bVJd3bp1k8csj+9RRerbt29FtwCVTosWLZJr8/LyyrEToDKYN29eUl379u3LuRPWZebMmRXdAluAQw89NLn2jTfeSKrr3LlzKbvZdJdccklybY8ePZLqHnjggdK2s8nOPPPM5Nq2bdsm1TVq1Kh0zWRs5MiRSXXXXXdd8phFRUWlbafScuY8AAAAAABkTDgPAAAAAAAZE84DAAAAAEDGhPMAAAAAAJAx4TwAAAAAAGRMOA8AAAAAABkTzgMAAAAAQMaE8wAAAAAAkDHhPAAAAAAAZCy/ohuoSo455pikutatW5dzJxvWsGHDCp0fqHj//ve/k+qaN2+ePOZdd91V2nY2S9tss01Ft1Cm5s2bl1x73nnnJdX179+/tO0ACYqLiyu6BQCggs2dOze59tZbb02qe+aZZ0rZzaarXr16cm2nTp2S6nr16lXadliHkSNHJtX16NEjqW7GjBmb0k6V58x5AAAAAADImHAeAAAAAAAyJpwHAAAAAICMCecBAAAAACBjwnkAAAAAAMiYcB4AAAAAADImnAcAAAAAgIwJ5wEAAAAAIGPCeQAAAAAAyFh+RTdQlSxfvjyprqioKHnMatXS3j9ZsWJF8pht27ZNrgW2bA899FBybc+ePZPqDjvssNK2wzosWrQoqe7kk09OHnPAgAGlbQcAYIuxYMGC5NqPP/44qW6nnXYqXTMQEc8//3xS3WmnnZZU16dPn03ohiyMHj06qe7WW29NHvPZZ59Nqlu6dGnymKyfM+cBAAAAACBjwnkAAAAAAMiYcB4AAAAAADImnAcAAAAAgIwJ5wEAAAAAIGPCeQAAAAAAyJhwHgAAAAAAMiacBwAAAACAjAnnAQAAAAAgY8J5AAAAAADIWF5xcXFxUmFeXnn3ssX4/PPPk2vz8/OT6m677bbkMR999NHkWtgcfd+yZb2qGLVr106q69GjR/KYP/7xj5PqLrroouQxU18fif89btTr7Z577kmqu/nmm5PHLCwsTKqbN29e8piUHesVazr44IOTawcPHlymcx9yyCHJtUOGDCnTudn8Wa+gfA0YMCCpbvLkyUl1Z5111qa0U6lZrzZd6veocePGyWNedtllSXXHHHNM8pidOnVKrq0ojz32WHLtxIkTk+pGjRqVPGbfvn2T6lL/bqRspeQKzpwHAAAAAICMCecBAAAAACBjwnkAAAAAAMiYcB4AAAAAADImnAcAAAAAgIwJ5wEAAAAAIGPCeQAAAAAAyJhwHgAAAAAAMiacBwAAAACAjOUVFxcXJxXm5ZV3LwBJvm/Zsl4BmwvrFVBZWK9g49WsWTO59v3330+qu/fee5PqHnzwweS5qxrrFVBZpMTuzpwHAAAAAICMCecBAAAAACBjwnkAAAAAAMiYcB4AAAAAADImnAcAAAAAgIwJ5wEAAAAAIGPCeQAAAAAAyJhwHgAAAAAAMiacBwAAAACAjAnnAQAAAAAgY3nFxcXFSYV5eeXdC0CS71u2rFfA5sJ6BVQW1iugsrBeAZVFSuzuzHkAAAAAAMiYcB4AAAAAADImnAcAAAAAgIwJ5wEAAAAAIGPCeQAAAAAAyJhwHgAAAAAAMiacBwAAAACAjAnnAQAAAAAgY8J5AAAAAADImHAeAAAAAAAyJpwHAAAAAICMCecBAAAAACBjwnkAAAAAAMiYcB4AAAAAADImnAcAAAAAgIwJ5wEAAAAAIGPCeQAAAAAAyJhwHgAAAAAAMiacBwAAAACAjAnnAQAAAAAgY8J5AAAAAADImHAeAAAAAAAyJpwHAAAAAICMCecBAAAAACBjwnkAAAAAAMiYcB4AAAAAADImnAcAAAAAgIwJ5wEAAAAAIGPCeQAAAAAAyJhwHgAAAAAAMpZXXFxcXNFNAAAAAADAlsSZ8wAAAAAAkDHhPAAAAAAAZEw4DwAAAAAAGRPOAwAAAABAxoTzAAAAAACQMeE8AAAAAABkTDgPAAAAAAAZE84DAAAAAEDGhPMAAAAAAJCx/w9hMZlSF+1TvgAAAABJRU5ErkJggg=="},"metadata":{}}],"execution_count":16},{"cell_type":"markdown","source":"## Data Preprocessing","metadata":{}},{"cell_type":"code","source":"# Separate features and labels\nX = train.drop('label', axis=1).values / 255.0  # Normalize pixel values\ny = train['label'].values\n\nX = X.reshape(-1, 28, 28, 1)  \ny = tf.keras.utils.to_categorical(y, 10)  \n\nX_train, X_val, y_train, y_val = train_test_split(X, y, test_size=0.2, random_state=42)\n\nprint(f\"Training data shape: {X_train.shape}\")\nprint(f\"Validation data shape: {X_val.shape}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:31:13.649381Z","iopub.execute_input":"2024-12-12T14:31:13.649605Z","iopub.status.idle":"2024-12-12T14:31:14.215144Z","shell.execute_reply.started":"2024-12-12T14:31:13.649582Z","shell.execute_reply":"2024-12-12T14:31:14.214280Z"}},"outputs":[{"name":"stdout","text":"Training data shape: (33600, 28, 28, 1)\nValidation data shape: (8400, 28, 28, 1)\n","output_type":"stream"}],"execution_count":17},{"cell_type":"markdown","source":"## CNN Modeling","metadata":{}},{"cell_type":"code","source":"from tensorflow.keras import Input\nfrom tensorflow.keras.models import Sequential\nfrom tensorflow.keras.layers import Conv2D, BatchNormalization, MaxPooling2D, Dropout, Flatten, Dense\n\nmodel = Sequential([\n    # Input Layer\n    Input(shape=(28, 28, 1)),\n\n    # First Convolutional Block\n    Conv2D(64, (3, 3), activation='relu'),\n    BatchNormalization(),\n    Conv2D(64, (3, 3), activation='relu'),\n    MaxPooling2D((2, 2)),\n    Dropout(0.3),\n\n    # Second Convolutional Block\n    Conv2D(128, (3, 3), activation='relu'),\n    BatchNormalization(),\n    Conv2D(128, (3, 3), activation='relu'),\n    MaxPooling2D((2, 2)),\n    Dropout(0.4),\n\n    # Third Convolutional Block\n    Conv2D(256, (3, 3), activation='relu'),\n    BatchNormalization(),\n    MaxPooling2D((2, 2)),\n    Dropout(0.5),\n\n    # Fully Connected Layers\n    Flatten(),\n    Dense(512, activation='relu'),\n    Dropout(0.5),\n    Dense(10, activation='softmax')  # Output layer for 10 classes\n])\n\n# Print model summary\nmodel.summary()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:31:14.216249Z","iopub.execute_input":"2024-12-12T14:31:14.216533Z","iopub.status.idle":"2024-12-12T14:31:15.166856Z","shell.execute_reply.started":"2024-12-12T14:31:14.216506Z","shell.execute_reply":"2024-12-12T14:31:15.166054Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"\u001b[1mModel: \"sequential\"\u001b[0m\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\">Model: \"sequential\"</span>\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃\u001b[1m \u001b[0m\u001b[1mLayer (type)                   \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1mOutput Shape          \u001b[0m\u001b[1m \u001b[0m┃\u001b[1m \u001b[0m\u001b[1m      Param #\u001b[0m\u001b[1m \u001b[0m┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d (\u001b[38;5;33mConv2D\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m26\u001b[0m, \u001b[38;5;34m26\u001b[0m, \u001b[38;5;34m64\u001b[0m)     │           \u001b[38;5;34m640\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ batch_normalization             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m26\u001b[0m, \u001b[38;5;34m26\u001b[0m, \u001b[38;5;34m64\u001b[0m)     │           \u001b[38;5;34m256\u001b[0m │\n│ (\u001b[38;5;33mBatchNormalization\u001b[0m)            │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_1 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m24\u001b[0m, \u001b[38;5;34m24\u001b[0m, \u001b[38;5;34m64\u001b[0m)     │        \u001b[38;5;34m36,928\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d (\u001b[38;5;33mMaxPooling2D\u001b[0m)    │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m12\u001b[0m, \u001b[38;5;34m12\u001b[0m, \u001b[38;5;34m64\u001b[0m)     │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dropout (\u001b[38;5;33mDropout\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m12\u001b[0m, \u001b[38;5;34m12\u001b[0m, \u001b[38;5;34m64\u001b[0m)     │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_2 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m10\u001b[0m, \u001b[38;5;34m10\u001b[0m, \u001b[38;5;34m128\u001b[0m)    │        \u001b[38;5;34m73,856\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ batch_normalization_1           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m10\u001b[0m, \u001b[38;5;34m10\u001b[0m, \u001b[38;5;34m128\u001b[0m)    │           \u001b[38;5;34m512\u001b[0m │\n│ (\u001b[38;5;33mBatchNormalization\u001b[0m)            │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_3 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m8\u001b[0m, \u001b[38;5;34m8\u001b[0m, \u001b[38;5;34m128\u001b[0m)      │       \u001b[38;5;34m147,584\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_1 (\u001b[38;5;33mMaxPooling2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m4\u001b[0m, \u001b[38;5;34m4\u001b[0m, \u001b[38;5;34m128\u001b[0m)      │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dropout_1 (\u001b[38;5;33mDropout\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m4\u001b[0m, \u001b[38;5;34m4\u001b[0m, \u001b[38;5;34m128\u001b[0m)      │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_4 (\u001b[38;5;33mConv2D\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m2\u001b[0m, \u001b[38;5;34m2\u001b[0m, \u001b[38;5;34m256\u001b[0m)      │       \u001b[38;5;34m295,168\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ batch_normalization_2           │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m2\u001b[0m, \u001b[38;5;34m2\u001b[0m, \u001b[38;5;34m256\u001b[0m)      │         \u001b[38;5;34m1,024\u001b[0m │\n│ (\u001b[38;5;33mBatchNormalization\u001b[0m)            │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_2 (\u001b[38;5;33mMaxPooling2D\u001b[0m)  │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m, \u001b[38;5;34m1\u001b[0m, \u001b[38;5;34m256\u001b[0m)      │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dropout_2 (\u001b[38;5;33mDropout\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m1\u001b[0m, \u001b[38;5;34m1\u001b[0m, \u001b[38;5;34m256\u001b[0m)      │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten (\u001b[38;5;33mFlatten\u001b[0m)               │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m256\u001b[0m)            │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense (\u001b[38;5;33mDense\u001b[0m)                   │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m512\u001b[0m)            │       \u001b[38;5;34m131,584\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dropout_3 (\u001b[38;5;33mDropout\u001b[0m)             │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m512\u001b[0m)            │             \u001b[38;5;34m0\u001b[0m │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_1 (\u001b[38;5;33mDense\u001b[0m)                 │ (\u001b[38;5;45mNone\u001b[0m, \u001b[38;5;34m10\u001b[0m)             │         \u001b[38;5;34m5,130\u001b[0m │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\">┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━━━━━━━━━━┳━━━━━━━━━━━━━━━┓\n┃<span style=\"font-weight: bold\"> Layer (type)                    </span>┃<span style=\"font-weight: bold\"> Output Shape           </span>┃<span style=\"font-weight: bold\">       Param # </span>┃\n┡━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━━━━━━━━━━╇━━━━━━━━━━━━━━━┩\n│ conv2d (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">26</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">26</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)     │           <span style=\"color: #00af00; text-decoration-color: #00af00\">640</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ batch_normalization             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">26</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">26</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)     │           <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span> │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalization</span>)            │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">24</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">24</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)     │        <span style=\"color: #00af00; text-decoration-color: #00af00\">36,928</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)    │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">12</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">12</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)     │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dropout (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">12</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">12</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">64</span>)     │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">10</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">10</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)    │        <span style=\"color: #00af00; text-decoration-color: #00af00\">73,856</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ batch_normalization_1           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">10</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">10</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)    │           <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span> │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalization</span>)            │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">8</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">8</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)      │       <span style=\"color: #00af00; text-decoration-color: #00af00\">147,584</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">4</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">4</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)      │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dropout_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">4</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">4</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">128</span>)      │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ conv2d_4 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Conv2D</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">2</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">2</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)      │       <span style=\"color: #00af00; text-decoration-color: #00af00\">295,168</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ batch_normalization_2           │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">2</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">2</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)      │         <span style=\"color: #00af00; text-decoration-color: #00af00\">1,024</span> │\n│ (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">BatchNormalization</span>)            │                        │               │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ max_pooling2d_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">MaxPooling2D</span>)  │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)      │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dropout_2 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">1</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)      │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ flatten (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Flatten</span>)               │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">256</span>)            │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                   │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)            │       <span style=\"color: #00af00; text-decoration-color: #00af00\">131,584</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dropout_3 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dropout</span>)             │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">512</span>)            │             <span style=\"color: #00af00; text-decoration-color: #00af00\">0</span> │\n├─────────────────────────────────┼────────────────────────┼───────────────┤\n│ dense_1 (<span style=\"color: #0087ff; text-decoration-color: #0087ff\">Dense</span>)                 │ (<span style=\"color: #00d7ff; text-decoration-color: #00d7ff\">None</span>, <span style=\"color: #00af00; text-decoration-color: #00af00\">10</span>)             │         <span style=\"color: #00af00; text-decoration-color: #00af00\">5,130</span> │\n└─────────────────────────────────┴────────────────────────┴───────────────┘\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Total params: \u001b[0m\u001b[38;5;34m692,682\u001b[0m (2.64 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Total params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">692,682</span> (2.64 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Trainable params: \u001b[0m\u001b[38;5;34m691,786\u001b[0m (2.64 MB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">691,786</span> (2.64 MB)\n</pre>\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":"\u001b[1m Non-trainable params: \u001b[0m\u001b[38;5;34m896\u001b[0m (3.50 KB)\n","text/html":"<pre style=\"white-space:pre;overflow-x:auto;line-height:normal;font-family:Menlo,'DejaVu Sans Mono',consolas,'Courier New',monospace\"><span style=\"font-weight: bold\"> Non-trainable params: </span><span style=\"color: #00af00; text-decoration-color: #00af00\">896</span> (3.50 KB)\n</pre>\n"},"metadata":{}}],"execution_count":18},{"cell_type":"markdown","source":"## Compiling modeling","metadata":{}},{"cell_type":"code","source":"# Compile the model\nmodel.compile(\n    optimizer='adam', \n    loss='categorical_crossentropy', \n    metrics=['accuracy']\n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:31:15.167902Z","iopub.execute_input":"2024-12-12T14:31:15.168182Z","iopub.status.idle":"2024-12-12T14:31:15.179728Z","shell.execute_reply.started":"2024-12-12T14:31:15.168155Z","shell.execute_reply":"2024-12-12T14:31:15.179052Z"}},"outputs":[],"execution_count":19},{"cell_type":"markdown","source":"## Data augmentation","metadata":{}},{"cell_type":"code","source":"from tensorflow.keras.preprocessing.image import ImageDataGenerator\n\ndatagen = ImageDataGenerator(\n    rotation_range=12,      \n    zoom_range=0.15,         \n    width_shift_range=0.15,  \n    height_shift_range=0.15  \n)\n\ndatagen.fit(X_train)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:31:15.180687Z","iopub.execute_input":"2024-12-12T14:31:15.180938Z","iopub.status.idle":"2024-12-12T14:31:15.267171Z","shell.execute_reply.started":"2024-12-12T14:31:15.180913Z","shell.execute_reply":"2024-12-12T14:31:15.266453Z"}},"outputs":[],"execution_count":20},{"cell_type":"markdown","source":"## Train modelling","metadata":{}},{"cell_type":"code","source":"from tensorflow.keras.callbacks import EarlyStopping, ReduceLROnPlateau\n\nearly_stopping = EarlyStopping(monitor='val_loss', patience=5, restore_best_weights=True)\nreduce_lr = ReduceLROnPlateau(monitor='val_loss', factor=0.5, patience=3)\n\nhistory = model.fit(\n    datagen.flow(X_train, y_train, batch_size=32), \n    validation_data=(X_val, y_val),              \n    epochs=10,                                     \n    callbacks=[early_stopping, reduce_lr]          \n)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:31:15.268241Z","iopub.execute_input":"2024-12-12T14:31:15.268513Z","iopub.status.idle":"2024-12-12T14:33:31.106206Z","shell.execute_reply.started":"2024-12-12T14:31:15.268487Z","shell.execute_reply":"2024-12-12T14:33:31.105487Z"}},"outputs":[{"name":"stdout","text":"Epoch 1/10\n","output_type":"stream"},{"name":"stderr","text":"WARNING: All log messages before absl::InitializeLog() is called are written to STDERR\nI0000 00:00:1734013878.246976      97 service.cc:145] XLA service 0x7f1078013ac0 initialized for platform CUDA (this does not guarantee that XLA will be used). Devices:\nI0000 00:00:1734013878.247072      97 service.cc:153]   StreamExecutor device (0): Tesla T4, Compute Capability 7.5\nI0000 00:00:1734013878.247077      97 service.cc:153]   StreamExecutor device (1): Tesla T4, Compute Capability 7.5\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m  13/1050\u001b[0m \u001b[37m━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[1m14s\u001b[0m 14ms/step - accuracy: 0.1144 - loss: 4.0579","output_type":"stream"},{"name":"stderr","text":"I0000 00:00:1734013886.976471      97 device_compiler.h:188] Compiled cluster using XLA!  This line is logged at most once for the lifetime of the process.\n","output_type":"stream"},{"name":"stdout","text":"\u001b[1m1050/1050\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m25s\u001b[0m 13ms/step - accuracy: 0.5548 - loss: 1.4359 - val_accuracy: 0.9767 - val_loss: 0.0736 - learning_rate: 0.0010\nEpoch 2/10\n\u001b[1m1050/1050\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 11ms/step - accuracy: 0.9241 - loss: 0.2458 - val_accuracy: 0.9776 - val_loss: 0.0651 - learning_rate: 0.0010\nEpoch 3/10\n\u001b[1m1050/1050\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 11ms/step - accuracy: 0.9454 - loss: 0.1842 - val_accuracy: 0.9867 - val_loss: 0.0401 - learning_rate: 0.0010\nEpoch 4/10\n\u001b[1m1050/1050\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 12ms/step - accuracy: 0.9542 - loss: 0.1582 - val_accuracy: 0.9902 - val_loss: 0.0304 - learning_rate: 0.0010\nEpoch 5/10\n\u001b[1m1050/1050\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 12ms/step - accuracy: 0.9601 - loss: 0.1402 - val_accuracy: 0.9893 - val_loss: 0.0308 - learning_rate: 0.0010\nEpoch 6/10\n\u001b[1m1050/1050\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 12ms/step - accuracy: 0.9629 - loss: 0.1370 - val_accuracy: 0.9902 - val_loss: 0.0363 - learning_rate: 0.0010\nEpoch 7/10\n\u001b[1m1050/1050\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 12ms/step - accuracy: 0.9685 - loss: 0.1149 - val_accuracy: 0.9877 - val_loss: 0.0426 - learning_rate: 0.0010\nEpoch 8/10\n\u001b[1m1050/1050\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 11ms/step - accuracy: 0.9732 - loss: 0.0974 - val_accuracy: 0.9939 - val_loss: 0.0230 - learning_rate: 5.0000e-04\nEpoch 9/10\n\u001b[1m1050/1050\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 12ms/step - accuracy: 0.9792 - loss: 0.0744 - val_accuracy: 0.9929 - val_loss: 0.0207 - learning_rate: 5.0000e-04\nEpoch 10/10\n\u001b[1m1050/1050\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m12s\u001b[0m 12ms/step - accuracy: 0.9785 - loss: 0.0722 - val_accuracy: 0.9932 - val_loss: 0.0223 - learning_rate: 5.0000e-04\n","output_type":"stream"}],"execution_count":21},{"cell_type":"code","source":"fig, axes = plt.subplots(1, 2, figsize=(14, 6), constrained_layout=True)\n\n# Plot training and validation accuracy\naxes[0].plot(history.history['accuracy'], label='Train Accuracy', color='dodgerblue', linestyle='-', marker='o', markersize=6)\naxes[0].plot(history.history['val_accuracy'], label='Validation Accuracy', color='orange', linestyle='--', marker='s', markersize=6)\naxes[0].set_title('Model Accuracy', fontsize=14, fontweight='bold')\naxes[0].set_xlabel('Epochs', fontsize=12)\naxes[0].set_ylabel('Accuracy', fontsize=12)\naxes[0].grid(True, alpha=0.3)\naxes[0].legend()\n\n# Plot training and validation loss\naxes[1].plot(history.history['loss'], label='Train Loss', color='green', linestyle='-', marker='x', markersize=6)\naxes[1].plot(history.history['val_loss'], label='Validation Loss', color='red', linestyle='--', marker='^', markersize=6)\naxes[1].set_title('Model Loss', fontsize=14, fontweight='bold')\naxes[1].set_xlabel('Epochs', fontsize=12)\naxes[1].set_ylabel('Loss', fontsize=12)\naxes[1].grid(True, alpha=0.3)\naxes[1].legend()\n\n# Show the plot\nplt.show()","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:33:31.107258Z","iopub.execute_input":"2024-12-12T14:33:31.107504Z","iopub.status.idle":"2024-12-12T14:33:31.869521Z","shell.execute_reply.started":"2024-12-12T14:33:31.107480Z","shell.execute_reply":"2024-12-12T14:33:31.868695Z"}},"outputs":[{"output_type":"display_data","data":{"text/plain":"<Figure size 1400x600 with 2 Axes>","image/png":""},"metadata":{}}],"execution_count":22},{"cell_type":"markdown","source":"## Model Evaluation","metadata":{}},{"cell_type":"code","source":"val_loss, val_accuracy = model.evaluate(X_val, y_val)\n\n# Print the validation accuracy\nprint(f\"Validation Accuracy: {val_accuracy:.4f}\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:33:31.870655Z","iopub.execute_input":"2024-12-12T14:33:31.870968Z","iopub.status.idle":"2024-12-12T14:33:32.504023Z","shell.execute_reply.started":"2024-12-12T14:33:31.870932Z","shell.execute_reply":"2024-12-12T14:33:32.503230Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m263/263\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 2ms/step - accuracy: 0.9911 - loss: 0.0253\nValidation Accuracy: 0.9929\n","output_type":"stream"}],"execution_count":23},{"cell_type":"markdown","source":"## Making predictions","metadata":{}},{"cell_type":"code","source":"\ntest_normalized = test / 255.0\ntest_normalized = test_normalized.values.reshape(-1, 28, 28, 1)\n\npredictions = np.argmax(model.predict(test_normalized), axis=1)\n\nsubmission = pd.DataFrame({'ImageId': range(1, len(predictions) + 1), 'Label': predictions})\nsubmission.to_csv('submission.csv', index=False)\n\nprint(\"Submission file saved as 'submission.csv'\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-12T14:33:32.505090Z","iopub.execute_input":"2024-12-12T14:33:32.505324Z","iopub.status.idle":"2024-12-12T14:33:34.772907Z","shell.execute_reply.started":"2024-12-12T14:33:32.505300Z","shell.execute_reply":"2024-12-12T14:33:34.772053Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m875/875\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 1ms/step\nSubmission file saved as 'submission.csv'\n","output_type":"stream"}],"execution_count":24},{"cell_type":"code","source":"","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}